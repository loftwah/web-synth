{"version":3,"sources":["components/SynthButton.js","components/PlaybackButton.js","components/RecordButton.js","Magenta/CustomPlayer.tsx","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["SynthButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pressed","playSynth","bind","assertThisInitialized","stopSynth","checkMouseDown","touchMove","synth","Tone","toMaster","startTime","e","preventDefault","setState","triggerAttack","note","currentTime","toFixed","triggerRelease","timeLength","recording","returnNote","midi","toMidi","length","buttons","console","log","_this2","react_default","a","createElement","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","className","Component","PlaybackButton","isPlaying","play","playing","index_es","RecordButton","color","isRecording","record","require","CustomPlayer","_mm$BasePlayer","Synth","inherits","createClass","key","value","time","freq","Frequency","pitch","dur","endTime","triggerAttackRelease","instrument","program","mm","tone","_mm$BasePlayer2","Player","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","synths","Map","velocity","hasOwnProperty","undefined","isDrum","getSynth","has","get","bass","oscillator","type","volume","set","PolySynth","Pad","sequence","qSequence","unqSequence","octave","quantizeNotes","envelope","bool","toggle","setupPlayer","viz","document","getElementById","noteHeight","pixelsPerTimeStep","noteSpacing","noteRGB","activeNoteRGB","player","run","redraw","stop","start","push","seconds","unquantizedSequence","notes","totalTime","qns","quantizeNoteSequence","_this3","music_rnn","initialize","continueSequence","then","sample","_this4","map","Grid_default","container","spacing","justify","index","item","sm","components_SynthButton","evelope","components_PlaybackButton","components_RecordButton","onClick","musicRNN","id","App","components_Pad","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00ac7c09.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n//import * as mm from '@magenta/music';\n\n\nclass SynthButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.playSynth = this.playSynth.bind(this);\n    this.stopSynth = this.stopSynth.bind(this);\n    this.checkMouseDown = this.checkMouseDown.bind(this);\n    this.touchMove = this.touchMove.bind(this);\n  }\n\n  componentWillMount() {\n    this.synth = new Tone.Synth({\n      // envelope: this.props.envelope\n    }).toMaster();\n    // this.synth = new CustomPlayer();\n    this.startTime = null;\n    // console.log(Tone.Frequency('C4').toNote())\n    // console.log(Tone.Frequency('C4').toFrequency())\n    // console.log(Tone.Frequency('C4').toMidi())\n  }\n\n  playSynth(e) {\n    e.preventDefault();\n    // console.log('play note');\n    this.setState({ pressed: true });\n    this.synth.triggerAttack(this.props.note);\n    this.startTime = Tone.context.currentTime.toFixed(2)\n    // this.startTime = Tone.Transport.seconds.toFixed(2);\n  }\n\n  stopSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: false });\n    this.synth.triggerRelease();\n\n    let timeLength = (\n      Tone.context.currentTime.toFixed(2) - this.startTime\n    ).toFixed(2);\n    if (this.startTime !== null && this.props.recording) {\n      this.props.returnNote({\n        note: this.props.note,\n        midi: Tone.Frequency(this.props.note).toMidi(),\n        length: timeLength,\n        // startTime: this.startTime,\n        // endTime: Tone.context.currentTime.toFixed(2)\n        // endTime: Tone.Transport.seconds.toFixed(2)\n      });\n    }\n    this.startTime = null;\n  }\n\n  checkMouseDown(e) {\n    if (e.buttons === 1 || e.buttons === 3) {\n      this.playSynth(e);\n    } else {\n      this.stopSynth(e);\n    }\n  }\n\n  touchMove(e) {\n    console.log(e);\n    // console.log(this.props.pitch);\n    this.setState({ pressed: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={(e) => this.playSynth(e)}\n          onMouseUp={(e) => this.stopSynth(e)}\n          onTouchStart={(e) => this.playSynth(e)}\n          onTouchEnd={(e) => this.stopSynth(e)}\n          onMouseEnter={(e) => this.checkMouseDown(e)}\n          onMouseLeave={(e) => this.stopSynth(e)}\n          className={this.state.pressed ? \"synth-button pressed\" : \"synth-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SynthButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { PlayArrow } from '@material-ui/icons';\n\n\nclass PlaybackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  play() {\n    this.props.isPlaying();\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.play()}\n          className={this.props.playing ? \"synth-button pressed\" : \"synth-button\"}\n        >\n        <PlayArrow />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default PlaybackButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { FiberManualRecord } from '@material-ui/icons';\n\n\nclass RecordButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n      // recording: false,\n      color: \"error\",\n    };\n  }\n\n  record() {\n    const {pressed} = this.state;\n    this.props.isRecording(!pressed)\n    this.setState({\n      pressed: !pressed,\n      // recording: !this.state.recording\n    });\n\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.record()}\n          className={this.state.pressed ? \"synth-button pressed blink_text\" : \"synth-button\"}\n        >\n          <FiberManualRecord className=\"blink_texts\" color=\"error\" />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default RecordButton;","import * as mm from '@magenta/music';\n// import * as Tone from 'tone';\nconst Tone = require('tone');\n\nexport class CustomPlayer extends mm.BasePlayer {\n  // private synth = new Tone.Synth().toMaster();\n  // private synths = new Map<number, any>();  // tslint:disable-line:no-any\n  private synth: any\n  /**\n   * The Tone module being used.\n   */\n  private constructor() {\n    super(false);\n    this.synth = new Tone.Synth().toMaster();\n  }\n  static readonly tone = Tone;  // tslint:disable-line:no-any\n\n  protected playNote(time: number, note: any) {\n    // If there's a velocity, use it.\n    const velocity = undefined;\n    // console.log(note.pitch);\n    const freq = new Tone.Frequency(note.pitch, 'midi');\n    // const freq = Tone.Frequency(note.pitch).toMidi()\n    const dur = note.endTime - note.startTime;\n    // this.getSynth(note.instrument, note.program)\n    //   .triggerAttackRelease(freq, dur, time, velocity);\n    // console.log(time);\n    // console.log(freq);\n    // this.synth.triggerAttackRelease('A3', 2.0, time)\n    console.log(this.synth);\n    this.synth.triggerAttackRelease(freq, dur, time);\n  }\n\n  private getSynth(instrument: number, program?: number) {\n    // if (this.synths.has(instrument)) {\n    //   console.log(0)\n    //   return this.synths.get(instrument);\n    // } else if (program !== undefined && program >= 32 && program <= 39) {\n    //   // const bass = new Tone.Synth({oscillator: {type: 'triangle'}}).toMaster();\n    //   const bass = new Tone.FMSynth().toMaster();\n    //   // bass.volume.value = 5;\n    //   console.log(1)\n    //   this.synths.set(instrument, bass);\n    // } else {\n    //   console.log(2)\n    //   // this.synths.set(instrument, new Tone.PolySynth(10).toMaster());\n    //   this.synths.set(instrument, new Tone.FMSynth().toMaster());\n\n    // }\n\n    // if (this.synths.has(instrument)) {\n    //   return this.synths.get(instrument);\n    // } else {\n    //   this.synths.set(instrument, new Tone.Synth().toMaster());\n    // }\n    return this.synth;\n    // return this.synths.get(instrument);\n  }\n}\n\nexport class Player extends mm.BasePlayer {\n  private synths = new Map<number, any>();  // tslint:disable-line:no-any\n  /**\n   * The Tone module being used.\n   */\n  static readonly tone = Tone;  // tslint:disable-line:no-any\n\n  protected playNote(time: number, note: any) {\n    // If there's a velocity, use it.\n    const velocity = note.hasOwnProperty('velocity') ?\n      note.velocity / 10 :\n      undefined;\n\n    if (note.isDrum) {\n    } else {\n      const freq = new Tone.Frequency(note.pitch, 'midi');\n      const dur = note.endTime - note.startTime;\n      this.getSynth(note.instrument, note.program)\n        .triggerAttackRelease(freq, dur, time, velocity);\n    }\n  }\n\n  private getSynth(instrument: number, program?: number) {\n    if (this.synths.has(instrument)) {\n      return this.synths.get(instrument);\n    } else if (program !== undefined && program >= 32 && program <= 39) {\n      const bass = new Tone.Synth({ oscillator: { type: 'triangle' } }).toMaster();\n      bass.volume.value = 5;\n      this.synths.set(instrument, bass);\n    } else {\n      this.synths.set(instrument, new Tone.PolySynth(10).toMaster());\n    }\n    return this.synths.get(instrument);\n  }\n}\n\nexport default CustomPlayer;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n// import Slider from '@material-ui/lab/Slider';\n\nimport * as Tone from 'tone';\nimport * as mm from '@magenta/music';\n\nimport SynthButton from './SynthButton';\n// import PlayButton from './PlayButton';\nimport PlaybackButton from './PlaybackButton';\nimport RecordButton from './RecordButton';\n\nimport CustomPlayer from '../Magenta/CustomPlayer';\n// import CustomPlayer from '../Magenta/Player';\n\nimport { AddToQueue } from '@material-ui/icons';\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: [],\n      qSequence: null,\n      unqSequence: null,\n      octave: 3,\n      recording: false,\n      playing: false,\n    };\n    // this.player = new mm.Player();\n    // this.player = new CustomPlayer();\n\n    this.returnNote = this.returnNote.bind(this);\n    this.isRecording = this.isRecording.bind(this);\n    this.isPlaying = this.isPlaying.bind(this);\n    this.quantizeNotes = this.quantizeNotes.bind(this);\n    this.play = this.play.bind(this);\n  }\n\n  componentWillMount() {\n    // this.player = new CustomPlayer();\n    // this.envelope = {\n    //   attack: 0.01,\n    //   decay: 0.1,\n    //   sustain: 0.5,\n    //   release: 1.0,\n    //   attackCurve: \"linear\",\n    //   decayCurve: \"exponential\",\n    //   releaseCurve: \"exponential\"\n    // };\n    this.envelope = {};\n    // this.synth = new Tone.FMSynth({\n    //   envelope: this.envelope\n    // }).toMaster();\n\n  }\n\n  async isRecording(bool) {\n    this.setState({ recording: bool });\n    Tone.Transport.toggle()\n    if (!bool) {\n      await this.quantizeNotes();\n      this.setupPlayer();\n    }\n  }\n\n  setupPlayer() {\n    const config = {\n      noteHeight: 6,\n      pixelsPerTimeStep: 30,  // like a note width\n      noteSpacing: 1,\n      noteRGB: '245, 245, 245',\n      activeNoteRGB: '240, 84, 119',\n    }\n    this.viz = new mm.Visualizer(\n      // this.state.unqSequence,\n      this.state.unqSequence,\n      document.getElementById('canvas'),\n      config);\n\n    this.player = new mm.Player(false, {\n      run: (note) => this.viz.redraw(note),\n      stop: () => {this.setState({ playing: false });}\n    });\n    // this.player = new CustomPlayer(false, {\n    //   run: (note) => this.viz.redraw(note),\n    //   stop: () => { this.setState({ playing: false }); }\n    // });\n\n    // this.player = new CustomPlayer();\n  }\n\n  isPlaying() {\n    if (this.state.unqSequence) {\n      this.setState({ playing: !this.state.playing });\n      this.play();\n    }\n  }\n\n  play() {\n    if (this.player.isPlaying()) {\n      this.player.stop();\n      this.setState({ playing: false });\n    } else {\n      this.player.start(this.state.unqSequence);\n      // this.player.start(this.state.unqSequence)\n      //   .then(() => this.setState({ playing: false }));\n    }\n  }\n\n  returnNote(note) {\n    // console.log(time.beg);\n    // console.log(time.end);\n    let sequence = this.state.sequence;\n    console.log(note);\n    sequence.push({\n      pitch: note.midi,\n      startTime: (Tone.Transport.seconds.toFixed(2) - note.length).toFixed(2),\n      endTime: Tone.Transport.seconds.toFixed(2)\n    })\n    this.setState({ sequence: sequence });\n  }\n\n  async quantizeNotes() {\n    let { sequence } = this.state;\n    const unquantizedSequence = {\n      notes: sequence,\n      totalTime: sequence[sequence.length - 1].endTime\n    }\n    const qns = mm.sequences.quantizeNoteSequence(unquantizedSequence, 4);\n    this.setState({ qSequence: qns, unqSequence: unquantizedSequence });\n  }\n\n  musicRNN() {\n    const music_rnn = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn');\n    music_rnn.initialize();\n    music_rnn.continueSequence(this.state.qSequence, 20, 1.5)\n      .then((sample) => this.player.start(sample));\n    // const qns = mm.sequences.quantizeNoteSequence(ORIGINAL_TWINKLE_TWINKLE, 4);\n\n  }\n\n  render() {\n    const sm = 2;\n    const octave = this.state.octave;\n    let notes = [\n      'C', 'C#', 'D', 'D#', 'E', 'F',\n      'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n    notes = notes.map(note => note + octave);\n\n    return (\n      <div>\n        <div className=\"pad\">\n          <Grid container spacing={24} justify=\"center\">\n            {notes.map((value, index) => (\n              <Grid item sm={sm} key={index}>\n                <SynthButton\n                  note={value}\n                  returnNote={this.returnNote}\n                  evelope={this.envelope}\n                  recording={this.state.recording}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n\n        <div className=\"playback-buttons\">\n          <Grid container spacing={24} justify=\"center\">\n            <Grid item sm={2}>\n              <PlaybackButton isPlaying={this.isPlaying} playing={this.state.playing} />\n            </Grid>\n            <Grid item sm={2}>\n              <RecordButton isRecording={this.isRecording} />\n            </Grid>\n            <Grid item sm={2}>\n              <button className=\"synth-button\" onClick={() => this.musicRNN()}>\n              <AddToQueue />\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n        <div className=\"canvas-container\">\n          <canvas id=\"canvas\" />\n        </div>\n\n\n      </div>\n    )\n  }\n}\n\nexport default Pad;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Pad from './components/Pad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pad />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}