{"version":3,"sources":["components/SynthButton.js","components/PlaybackButton.js","components/RecordButton.js","components/OctaveControl.js","components/MLButton.js","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["SynthButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pressed","playSynth","bind","assertThisInitialized","stopSynth","checkMouseDown","synth","Tone","envelope","oscillator","toMaster","startTime","document","addEventListener","keyboardPress","keyboardUp","e","key","keymap","preventDefault","setState","triggerAttack","note","currentTime","toFixed","triggerRelease","timeLength","recording","returnNote","pitch","midi","toMidi","length","buttons","_this2","react_default","a","createElement","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","className","Component","PlaybackButton","isPlaying","disabled","play","playing","index_es","RecordButton","color","isRecording","record","OctaveControl","handleChange","event","returnOctave","target","value","map","index","Radio_default","octave","checked","onChange","name","aria-label","MLButton","_useState","useState","_useState2","slicedToArray","setPressed","music_rnn","mm","predict","console","log","qSequence","clearTransportSchedule","sequence","notes","forEach","clip_sequence","continueSequence","then","sample","update_sequence","unquantizeSequence","useEffect","Pad","unqSequence","quantizeNotes","attack","decay","sustain","release","attackCurve","decayCurve","releaseCurve","type","set","bool","setupPlayer","toggle","cancel","duration","triggerAttackRelease","endTime","schedule","triggerSynth","loopEnd","loop","mm_sequence","toNote","push","seconds","unquantizedSequence","totalTime","qns","quantizeNoteSequence","_this3","keymaps","notesAndKeys","ml_disabled","r_disabled","p_disabled","Grid_default","container","spacing","justify","item","sm","components_SynthButton","evelope","components_PlaybackButton","components_RecordButton","components_MLButton","components_OctaveControl","App","components_Pad","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","href","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3aae1130.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n\nclass SynthButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.playSynth = this.playSynth.bind(this);\n    this.stopSynth = this.stopSynth.bind(this);\n    this.checkMouseDown = this.checkMouseDown.bind(this);\n  }\n\n  componentWillMount() {\n    this.synth = new Tone.Synth({\n      envelope: this.props.envelope,\n      oscillator: this.props.oscillator\n    }).toMaster();\n    this.startTime = null;\n    document.addEventListener(\"keydown\", this.keyboardPress.bind(this));\n    document.addEventListener(\"keyup\", this.keyboardUp.bind(this));\n  }\n\n  keyboardPress(e) {\n    if (e.key === this.props.keymap) {\n      this.playSynth(e);\n    }\n  }\n\n  keyboardUp(e) {\n    if (e.key === this.props.keymap) {\n      this.stopSynth(e);\n    }\n  }\n\n  playSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: true });\n    this.synth.triggerAttack(this.props.note);\n    this.startTime = Tone.context.currentTime.toFixed(2)\n  }\n\n  stopSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: false });\n    this.synth.triggerRelease();\n\n    let timeLength = (\n      Tone.context.currentTime.toFixed(2) - this.startTime\n    ).toFixed(2);\n\n    if (this.startTime !== null && this.props.recording) {\n      this.props.returnNote({\n        pitch: this.props.note,\n        midi: Tone.Frequency(this.props.note).toMidi(),\n        length: timeLength,\n      });\n    }\n    this.startTime = null;\n  }\n\n  checkMouseDown(e) {\n    if (e.buttons === 1 || e.buttons === 3) {\n      this.playSynth(e);\n    } else {\n      this.stopSynth(e);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={(e) => this.playSynth(e)}\n          onMouseUp={(e) => this.stopSynth(e)}\n          onTouchStart={(e) => this.playSynth(e)}\n          onTouchEnd={(e) => this.stopSynth(e)}\n          onMouseEnter={(e) => this.checkMouseDown(e)}\n          onMouseLeave={(e) => this.stopSynth(e)}\n          // onKeyDown={(e) => {this.keyboardPress(e)}}\n          // onKeyUp={(e) => this.stopSynth(e)}\n          className={this.state.pressed ? \"synth-button pressed\" : \"synth-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SynthButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { PlayArrow } from '@material-ui/icons';\n\n\nclass PlaybackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  play(e) {\n    e.preventDefault();\n    this.props.isPlaying();\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          disabled={this.props.disabled}\n          onMouseDown={(e) => this.play(e)}\n          onTouchEnd={(e) => this.play(e)}\n          className={this.props.playing ? \"synth-button pressed\" : \"synth-button\"}\n        >\n        <PlayArrow />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default PlaybackButton;","import React, { Component } from 'react';\n\nimport { FiberManualRecord } from '@material-ui/icons';\n\nclass RecordButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n      color: \"error\",\n    };\n  }\n\n  record(e) {\n    e.preventDefault();\n    const {pressed} = this.state;\n    this.props.isRecording(!pressed)\n    this.setState({\n      pressed: !pressed,\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          disabled={this.props.disabled}\n          onMouseDown={(e) => this.record(e)}\n          onTouchEnd={(e) => this.record(e)}\n          className={this.state.pressed ? \"synth-button pressed blink_text\" : \"synth-button\"}\n        >\n          <FiberManualRecord className=\"blink_texts\" />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default RecordButton;","import React from 'react';\n\nimport Radio from '@material-ui/core/Radio';\n\nfunction OctaveControl(props) {\n  const octaves = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  function handleChange(event) {\n    props.returnOctave(event.target.value);\n  }\n\n  return (\n    <div>\n      {octaves.map((value, index) => (\n        <Radio\n          key={index}\n          className={props.octave === value ? \"octave-radio-button-checked\" : \"octave-radio-button\"}\n          checked={props.octave === value}\n          onChange={handleChange}\n          value={value}\n          name='radio-button-octave'\n          aria-label={value}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default OctaveControl;","import React, { useState, useEffect } from 'react';\n\nimport * as mm from '@magenta/music';\n\nfunction MLButton(props) {\n  const [pressed, setPressed] = useState(false);\n  const music_rnn = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn');\n  \n  useEffect(() => {\n    // music_rnn.initialize();\n  })\n\n  function clip_sequence(sequence) {\n    sequence.notes.forEach((note) => {\n      if (note.pitch > 84) {\n        note.pitch = 84;\n      }\n      else if (note.pitch < 48) {\n        note.pitch = 48;\n      }\n    })\n\n    return sequence;\n  }\n\n  function predict() {\n    setPressed(true);\n    console.log('predicting...');\n    console.log(props.qSequence);\n    props.clearTransportSchedule();\n    const sequence = clip_sequence(props.qSequence);\n    music_rnn.continueSequence(sequence, 40, 1.5)\n    .then((sample) => {\n      props.update_sequence(mm.sequences.unquantizeSequence(sample).notes)\n    })\n    .then(() => {\n      setPressed(false)\n    });\n  }\n\n  return (\n    <div>\n      <button\n        disabled={props.disabled}\n        onMouseDown={() => predict()}\n        onTouchEnd={() => predict()}\n        className={pressed ? \"synth-button mlbutton pressed\" : \"synth-button mlbutton\"}\n      >\n      <i className=\"fas fa-brain\"></i>\n      </button>\n    </div>\n\n  )\n}\n\nexport default MLButton;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n// import Slider from '@material-ui/lab/Slider';\n\nimport * as Tone from 'tone';\nimport * as mm from '@magenta/music';\n\nimport SynthButton from './SynthButton';\nimport PlaybackButton from './PlaybackButton';\nimport RecordButton from './RecordButton';\nimport OctaveControl from './OctaveControl';\nimport MLButton from './MLButton';\n\n// import { AddToQueue } from '@material-ui/icons';\n\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: [],\n      qSequence: null,\n      unqSequence: null,\n      octave: '3',\n      recording: false,\n      playing: false,\n    };\n    // this.music_rnn = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn');\n\n    this.returnNote = this.returnNote.bind(this);\n    this.returnOctave = this.returnOctave.bind(this);\n    this.isRecording = this.isRecording.bind(this);\n    this.isPlaying = this.isPlaying.bind(this);\n    this.quantizeNotes = this.quantizeNotes.bind(this);\n    this.play = this.play.bind(this);\n    this.update_sequence = this.update_sequence.bind(this);\n    this.clearTransportSchedule = this.clearTransportSchedule.bind(this);\n  }\n\n  componentWillMount() {\n    this.envelope = {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1.0,\n      attackCurve: \"linear\",\n      decayCurve: \"exponential\",\n      releaseCurve: \"exponential\"\n    };\n    this.oscillator = {\n      type: 'sawtooth',\n    }\n    this.synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n    this.synth.set({\n      oscillator: this.oscillator,\n      envelope: this.envelope\n    });\n    // this.music_rnn.initialize();\n  }\n\n  async isRecording(bool) {\n    this.setState({ recording: bool });\n    if (!bool) {\n      // if recording has stopped then quantize notes\n      await this.quantizeNotes();\n      this.setupPlayer();\n    } else {\n      await this.clearTransportSchedule();\n    }\n    Tone.Transport.toggle();\n  }\n\n  async clearTransportSchedule() {\n    this.setState({ sequence: [] });\n    Tone.Transport.cancel();\n  }\n\n  triggerSynth(note, duration) {\n    this.synth.triggerAttackRelease(note, duration);\n  }\n\n  async setupPlayer() {\n    const { sequence } = this.state;\n    // await Tone.Transport.clear();\n    let endTime = 0.0;\n\n    sequence.forEach((note) => {\n      if (note.endTime > endTime) {\n        endTime = note.endTime;\n      }\n      Tone.Transport.schedule(() => {\n        this.triggerSynth(note.note, note.duration)\n      }, note.startTime)\n    });\n\n    Tone.Transport.loopEnd = endTime + 1.0;\n    Tone.Transport.loop = true;\n  }\n\n  isPlaying() {\n    if (this.state.unqSequence) {\n      this.setState({ playing: !this.state.playing });\n      this.play();\n    }\n  }\n\n  play() {\n    Tone.Transport.toggle();\n  }\n\n  async update_sequence(mm_sequence) {\n    let sequence = mm_sequence;\n    sequence\n      .forEach((note) => {\n        note.duration = note.endTime - note.startTime\n        note.note = Tone.Frequency(note.pitch, \"midi\").toNote()\n      })\n    console.log(sequence);\n\n    await this.setState({ sequence: sequence })\n    this.setupPlayer();\n\n  }\n\n  returnNote(note) {\n    let sequence = this.state.sequence;\n    // console.log(note);\n    sequence.push({\n      note: note.pitch,\n      pitch: note.midi,\n      startTime: (Tone.Transport.seconds.toFixed(2) - note.length).toFixed(2),\n      endTime: Tone.Transport.seconds.toFixed(2),\n      duration: note.length\n    })\n    this.setState({ sequence: sequence });\n  }\n\n  returnOctave(octave) {\n    this.setState({ octave: octave });\n  }\n\n  async quantizeNotes() {\n    let { sequence } = this.state;\n    const unquantizedSequence = {\n      notes: sequence,\n      totalTime: sequence[sequence.length - 1].endTime\n    }\n    const qns = mm.sequences.quantizeNoteSequence(unquantizedSequence, 4);\n    this.setState({ qSequence: qns, unqSequence: unquantizedSequence });\n  }\n\n  // musicRNN() {\n  //   this.music_rnn.continueSequence(this.state.qSequence, 20, 1.5)\n  //     .then((sample) => {\n  //       this.update_sequence(mm.sequences.unquantizeSequence(sample).notes)\n  //     });\n  // }\n\n  render() {\n    const sm = 2;\n    const octave = this.state.octave;\n    let notes = [\n      'C', 'C#', 'D', 'D#', 'E', 'F',\n      'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n    const keymaps = [\n      'a', 'w', 's', 'e', 'd', 'f', 't',\n      'j', 'i', 'k', 'o', 'l'\n    ];\n    notes = notes.map(note => note + octave);\n\n    const notesAndKeys = notes.map((value, index) => {\n      return { note: value, keymap: keymaps[index] };\n    });\n\n    const ml_disabled = this.state.qSequence ? false : true;\n    const r_disabled = this.state.playing ? true : false;\n    const p_disabled = this.state.recording ? true: false;\n\n\n    return (\n      <div>\n        <div className=\"pad\">\n          <Grid container spacing={24} justify=\"center\">\n            {notesAndKeys.map((value, index) => (\n              <Grid item sm={sm} key={index}>\n                <SynthButton\n                  note={value.note}\n                  keymap={value.keymap}\n                  returnNote={this.returnNote}\n                  evelope={this.envelope}\n                  oscillator={this.oscillator}\n                  recording={this.state.recording}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n\n        <div className=\"playback-buttons\">\n          <Grid container spacing={24} justify=\"center\">\n            <Grid item sm={2}>\n              <PlaybackButton \n                isPlaying={this.isPlaying} \n                playing={this.state.playing} \n                disabled={p_disabled}\n              />\n            </Grid>\n            <Grid item sm={2}>\n              <RecordButton \n                isRecording={this.isRecording} \n                disabled={r_disabled}\n              />\n            </Grid>\n            <Grid item sm={2}>\n              <MLButton\n                disabled={ml_disabled}\n                qSequence={this.state.qSequence}\n                update_sequence={this.update_sequence}\n                clearTransportSchedule={this.clearTransportSchedule}\n              />\n            </Grid>\n          </Grid>\n        </div>\n        {/* <div className=\"canvas-container\">\n          <canvas id=\"canvas\" />\n        </div> */}\n        <div className=\"octave-container\">\n          <OctaveControl\n            returnOctave={this.returnOctave}\n            octave={this.state.octave} />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Pad;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Pad from './components/Pad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pad />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}