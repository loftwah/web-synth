{"version":3,"sources":["components/SynthButton.js","components/PlaybackButton.js","components/PlayButton.js","components/Pad.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["SynthButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pressed","synth","Tone","toMaster","playSynth","bind","assertThisInitialized","stopSynth","checkMouseDown","touchMove","startTime","e","preventDefault","setState","triggerAttack","pitch","currentTime","toFixed","triggerRelease","returnNote","endtime","buttons","console","log","_this2","react_default","a","createElement","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","className","Component","PlaybackButton","play","setupSchedule","schedule","time","triggerAttackRelease","loopEnd","loop","toggle","_this3","Pad","sequence","envelope","attack","decay","sustain","release","attackCurve","decayCurve","releaseCurve","note","push","endTime","Grid_default","container","spacing","justify","item","sm","components_SynthButton","components_PlaybackButton","App","components_Pad","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6414f8c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n//import * as mm from '@magenta/music';\n\n\nclass SynthButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    // this.synth = new Tone.AMSynth().toMaster();\n    this.synth = new Tone.Synth().toMaster();\n    this.playSynth = this.playSynth.bind(this);\n    this.stopSynth = this.stopSynth.bind(this);\n    this.checkMouseDown = this.checkMouseDown.bind(this);\n    this.touchMove = this.touchMove.bind(this);\n    this.startTime = null;\n\n  }\n\n  playSynth(e) {\n    e.preventDefault();\n    // console.log('play note');\n    this.setState({ pressed: true });\n    this.synth.triggerAttack(this.props.pitch);\n    this.startTime = Tone.context.currentTime.toFixed(2)\n  }\n\n  stopSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: false });\n    this.synth.triggerRelease();\n    if (this.startTime !== null) {\n      this.props.returnNote({\n        pitch: this.props.pitch,\n        startTime: this.startTime,\n        endtime: Tone.context.currentTime.toFixed(2)\n      });\n    }\n    this.startTime = null;\n  }\n\n  checkMouseDown(e) {\n    if (e.buttons === 1 || e.buttons === 3) {\n      this.playSynth(e);\n    } else {\n      this.stopSynth(e);\n    }\n  }\n\n  touchMove(e) {\n    console.log(e);\n    console.log(this.props.pitch);\n    this.setState({ pressed: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={(e) => this.playSynth(e)}\n          onMouseUp={(e) => this.stopSynth(e)}\n          onTouchStart={(e) => this.playSynth(e)}\n          onTouchEnd={(e) => this.stopSynth(e)}\n          onMouseEnter={(e) => this.checkMouseDown(e)}\n          onMouseLeave={(e) => this.stopSynth(e)}\n          className={this.state.pressed ? \"drum-button pressed\" : \"drum-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SynthButton;","import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\n\nclass PlaybackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.synth = new Tone.AMSynth().toMaster();\n    this.play = this.play.bind(this);\n    this.setupSchedule = this.setupSchedule.bind(this);\n  }\n\n  componentWillMount() {\n    this.setupSchedule();\n  }\n\n  setupSchedule() {\n    Tone.Transport.schedule((time) => {\n      this.synth.triggerAttackRelease('C2', '8n', time)\n    }, 0)\n\n    Tone.Transport.schedule((time) => {\n      this.synth.triggerAttackRelease('C2', '8n', time)\n    }, 1)\n\n    Tone.Transport.schedule((time) => {\n      this.synth.triggerAttackRelease('C2', '8n', time)\n    }, 2)\n\n    Tone.Transport.loopEnd = 5.0;\n    Tone.Transport.loop = true;\n  }\n\n  play() {\n    this.setState({ pressed: !this.state.pressed });\n    Tone.Transport.toggle();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.play()}\n          className={this.state.pressed ? \"drum-button pressed\" : \"drum-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default PlaybackButton;","import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n//import * as mm from '@magenta/music';\n\n\nclass PlayButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.synth = new Tone.AMSynth().toMaster();\n    this.triggerSynth = this.triggerSynth.bind(this);\n  }\n\n  componentDidMount() {\n    Tone.Transport.schedule(this.triggerSynth, 0);\n    Tone.Transport.schedule(this.triggerSynth, '0:2');\n    Tone.Transport.schedule(this.triggerSynth, '0:2:2.5');\n\n    Tone.Transport.loopEnd = '1m'\n    Tone.Transport.loop = true\n  }\n\n  triggerSynth(time) {\n    //the time is the sample-accurate time of the event\n    this.synth.triggerAttackRelease('C2', '8n', time)\n  }\n\n  play() {\n    this.setState({pressed: !this.state.pressed});\n    Tone.Transport.toggle();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.play()}\n          className={this.state.pressed ? \"drum-button pressed\" : \"drum-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default PlayButton;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport * as Tone from 'tone';\n\nimport SynthButton from './SynthButton';\nimport PlayButton from './PlayButton';\nimport PlaybackButton from './PlaybackButton';\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: []\n    };\n    this.returnNote = this.returnNote.bind(this);\n  }\n\n  componentWillMount() {\n    this.envelope = {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1.0,\n      attackCurve: \"linear\",\n      decayCurve: \"exponential\",\n      releaseCurve: \"exponential\"\n    }\n\n  }\n\n  returnNote(note) {\n    // console.log(time.beg);\n    // console.log(time.end);\n    let sequence = this.state.sequence;\n    console.log(note);\n    sequence.push({\n      pitch: note.pitch,\n      startTime: note.startTime,\n      endTime: note.endTime\n    })\n    this.setState({ sequence: sequence });\n  }\n\n  render() {\n    let sm = 2;\n    return (\n      <div className=\"pad\">\n        <div className=\"play-button\">\n          <Grid container spacing={24} justify=\"center\">\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'A5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'B5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'C5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'D5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'E5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'F5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'G5'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n            <Grid item sm={sm}>\n              <SynthButton\n                pitch={'A6'}\n                returnNote={this.returnNote}\n                envelope={this.envelope}\n              />\n            </Grid>\n          </Grid>\n        </div>\n\n        <div className=\"playback-buttons\">\n          <Grid container spacing={24} justify=\"center\">\n            {/* <PlayButton /> */}\n            <PlaybackButton />\n          </Grid>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Pad;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Pad from './components/Pad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pad />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}