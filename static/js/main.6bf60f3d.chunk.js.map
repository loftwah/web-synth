{"version":3,"sources":["components/SynthButton.js","components/PlaybackButton.js","components/RecordButton.js","components/OctaveControl.js","components/MLButton.js","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["SynthButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pressed","playSynth","bind","assertThisInitialized","stopSynth","checkMouseDown","synth","Tone","envelope","oscillator","toMaster","startTime","document","addEventListener","keyboardPress","keyboardUp","e","key","keymap","preventDefault","setState","triggerAttack","note","currentTime","toFixed","triggerRelease","timeLength","recording","returnNote","pitch","midi","toMidi","length","buttons","_this2","react_default","a","createElement","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","className","Component","PlaybackButton","isPlaying","play","playing","index_es","RecordButton","color","isRecording","record","OctaveControl","handleChange","event","returnOctave","target","value","map","index","Radio_default","checked","octave","onChange","name","aria-label","MLButton","Pad","sequence","qSequence","unqSequence","music_rnn","mm","quantizeNotes","update_sequence","attack","decay","sustain","release","attackCurve","decayCurve","releaseCurve","type","set","initialize","bool","toggle","setupPlayer","duration","triggerAttackRelease","endTime","forEach","schedule","triggerSynth","loopEnd","loop","mm_sequence","toNote","console","log","push","seconds","unquantizedSequence","notes","totalTime","qns","quantizeNoteSequence","_this3","continueSequence","then","sample","unquantizeSequence","_this4","keymaps","notesAndKeys","Grid_default","container","spacing","justify","item","sm","components_SynthButton","evelope","components_PlaybackButton","components_RecordButton","id","components_OctaveControl","App","components_Pad","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bf60f3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n\nclass SynthButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.playSynth = this.playSynth.bind(this);\n    this.stopSynth = this.stopSynth.bind(this);\n    this.checkMouseDown = this.checkMouseDown.bind(this);\n  }\n\n  componentWillMount() {\n    this.synth = new Tone.Synth({\n      envelope: this.props.envelope,\n      oscillator: this.props.oscillator\n    }).toMaster();\n    this.startTime = null;\n    document.addEventListener(\"keydown\", this.keyboardPress.bind(this));\n    document.addEventListener(\"keyup\", this.keyboardUp.bind(this));\n  }\n\n  keyboardPress(e) {\n    if (e.key === this.props.keymap) {\n      this.playSynth(e);\n    }\n  }\n\n  keyboardUp(e) {\n    if (e.key === this.props.keymap) {\n      this.stopSynth(e);\n    }\n  }\n\n  playSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: true });\n    this.synth.triggerAttack(this.props.note);\n    this.startTime = Tone.context.currentTime.toFixed(2)\n  }\n\n  stopSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: false });\n    this.synth.triggerRelease();\n\n    let timeLength = (\n      Tone.context.currentTime.toFixed(2) - this.startTime\n    ).toFixed(2);\n\n    if (this.startTime !== null && this.props.recording) {\n      this.props.returnNote({\n        pitch: this.props.note,\n        midi: Tone.Frequency(this.props.note).toMidi(),\n        length: timeLength,\n      });\n    }\n    this.startTime = null;\n  }\n\n  checkMouseDown(e) {\n    if (e.buttons === 1 || e.buttons === 3) {\n      this.playSynth(e);\n    } else {\n      this.stopSynth(e);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={(e) => this.playSynth(e)}\n          onMouseUp={(e) => this.stopSynth(e)}\n          onTouchStart={(e) => this.playSynth(e)}\n          onTouchEnd={(e) => this.stopSynth(e)}\n          onMouseEnter={(e) => this.checkMouseDown(e)}\n          onMouseLeave={(e) => this.stopSynth(e)}\n          // onKeyDown={(e) => {this.keyboardPress(e)}}\n          // onKeyUp={(e) => this.stopSynth(e)}\n          className={this.state.pressed ? \"synth-button pressed\" : \"synth-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SynthButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { PlayArrow } from '@material-ui/icons';\n\n\nclass PlaybackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  play() {\n    this.props.isPlaying();\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.play()}\n          onTouchStart={() => this.play()}\n          className={this.props.playing ? \"synth-button pressed\" : \"synth-button\"}\n        >\n        <PlayArrow />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default PlaybackButton;","import React, { Component } from 'react';\n\nimport { FiberManualRecord } from '@material-ui/icons';\n\nclass RecordButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n      color: \"error\",\n    };\n  }\n\n  record() {\n    const {pressed} = this.state;\n    this.props.isRecording(!pressed)\n    this.setState({\n      pressed: !pressed,\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.record()}\n          onTouchStart={() => this.record()}\n          className={this.state.pressed ? \"synth-button pressed blink_text\" : \"synth-button\"}\n        >\n          <FiberManualRecord className=\"blink_texts\" color=\"error\" />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default RecordButton;","import React from 'react';\n\nimport Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n\n\n// class OctaveControl extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//     };\n//   }\n\n//   handleChange = event => {\n//     this.props.returnOctave(event.target.value);\n//   };\n\n//   render() {\n//     const octaves = ['1', '2', '3', '4', '5', '6', '7', '8'];\n//     return (\n//       <div>\n//         {octaves.map((value, index) => (\n//           <Radio\n//             className=\"octave-radio-button\"\n//             checked={this.props.octave === value}\n//             onChange={this.handleChange}\n//             value={value}\n//             name='radio-button-octave'\n//             aria-label={value}\n//           />\n//         ))}\n//       </div>\n//     )\n//   }\n// }\n\nfunction OctaveControl(props) {\n  const octaves = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  function handleChange(event) {\n    props.returnOctave(event.target.value);\n  }\n\n  return (\n    <div>\n      {octaves.map((value, index) => (\n        <Radio\n          key={index}\n          className=\"octave-radio-button\"\n          checked={props.octave === value}\n          onChange={handleChange}\n          value={value}\n          name='radio-button-octave'\n          aria-label={value}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default OctaveControl;","import React, { useState } from 'react';\n\n// import * as mm from '@magenta/music';\n\nfunction MLButton() {\n  const [pressed, setPressed] = useState(false);\n\n  function predict() {\n    setPressed(true);\n    console.log('predicting...')\n    setTimeout(function() {\n      setPressed(false)\n    }, 2000);\n  }\n\n  return (\n    <div>\n      <button\n        onMouseDown={() => predict()}\n        onTouchStart={() => predict()}\n        className={pressed ? \"synth-button mlbutton pressed\" : \"synth-button mlbutton\"}\n      >\n      <i className=\"fas fa-brain\"></i>\n      </button>\n    </div>\n\n  )\n}\n\nexport default MLButton;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n// import Slider from '@material-ui/lab/Slider';\n\nimport * as Tone from 'tone';\nimport * as mm from '@magenta/music';\n\nimport SynthButton from './SynthButton';\nimport PlaybackButton from './PlaybackButton';\nimport RecordButton from './RecordButton';\nimport OctaveControl from './OctaveControl';\nimport MLButton from './MLButton';\n\n// import { AddToQueue } from '@material-ui/icons';\n\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: [],\n      qSequence: null,\n      unqSequence: null,\n      octave: '3',\n      recording: false,\n      playing: false,\n    };\n    // this.player = new mm.Player();\n    // this.player = new CustomPlayer();\n    this.music_rnn = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn');\n\n    this.returnNote = this.returnNote.bind(this);\n    this.returnOctave = this.returnOctave.bind(this);\n    this.isRecording = this.isRecording.bind(this);\n    this.isPlaying = this.isPlaying.bind(this);\n    this.quantizeNotes = this.quantizeNotes.bind(this);\n    this.play = this.play.bind(this);\n    this.update_sequence = this.update_sequence.bind(this);\n  }\n\n  componentWillMount() {\n    this.envelope = {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 1.0,\n      attackCurve: \"linear\",\n      decayCurve: \"exponential\",\n      releaseCurve: \"exponential\"\n    };\n    this.oscillator = {\n      type: 'sawtooth',\n    }\n    this.synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n    this.synth.set({\n      oscillator: this.oscillator,\n      envelope: this.envelope\n    });\n    this.music_rnn.initialize();\n  }\n\n  async isRecording(bool) {\n    this.setState({ recording: bool });\n    Tone.Transport.toggle()\n    if (!bool) {\n      // if recording has stopped then quantize notes\n      await this.quantizeNotes();\n      this.setupPlayer();\n    }\n  }\n\n  triggerSynth(note, duration) {\n    this.synth.triggerAttackRelease(note, duration);\n  }\n\n  setupPlayer() {\n    // const config = {\n    //   noteHeight: 6,\n    //   pixelsPerTimeStep: 30,  // like a note width\n    //   noteSpacing: 1,\n    //   noteRGB: '245, 245, 245',\n    //   activeNoteRGB: '240, 84, 119',\n    // }\n    // this.viz = new mm.Visualizer(\n    //   this.state.unqSequence,\n    //   document.getElementById('canvas'),\n    //   config);\n\n    // this.player = new mm.Player(false, {\n    //   run: (note) => this.viz.redraw(note),\n    //   stop: () => {this.setState({ playing: false });}\n    // });\n    const { sequence } = this.state;\n    let endTime = 0.0;\n\n    sequence.forEach((note) => {\n      if (note.endTime > endTime) {\n        endTime = note.endTime;\n      }\n      Tone.Transport.schedule(() => {\n        this.triggerSynth(note.note, note.duration)\n      }, note.startTime)\n    });\n\n    Tone.Transport.loopEnd = endTime + 1.0;\n    Tone.Transport.loop = true;\n  }\n\n  isPlaying() {\n    if (this.state.unqSequence) {\n      this.setState({ playing: !this.state.playing });\n      this.play();\n    }\n  }\n\n  play() {\n    // if (this.player.isPlaying()) {\n    //   this.player.stop();\n    //   this.setState({ playing: false });\n    // } else {\n    //   this.player.start(this.state.unqSequence);\n    // }\n    Tone.Transport.toggle();\n  }\n\n  async update_sequence(mm_sequence) {\n    let sequence = mm_sequence;\n    sequence\n      .forEach((note) => {\n        note.duration = note.endTime - note.startTime\n        note.note = Tone.Frequency(note.pitch, \"midi\").toNote()\n      })\n    console.log(sequence);\n\n    await this.setState({ sequence: sequence })\n    this.setupPlayer();\n\n  }\n\n  returnNote(note) {\n    let sequence = this.state.sequence;\n    // console.log(note);\n    sequence.push({\n      note: note.pitch,\n      pitch: note.midi,\n      startTime: (Tone.Transport.seconds.toFixed(2) - note.length).toFixed(2),\n      endTime: Tone.Transport.seconds.toFixed(2),\n      duration: note.length\n    })\n    this.setState({ sequence: sequence });\n  }\n\n  returnOctave(octave) {\n    this.setState({ octave: octave });\n  }\n\n  async quantizeNotes() {\n    let { sequence } = this.state;\n    const unquantizedSequence = {\n      notes: sequence,\n      totalTime: sequence[sequence.length - 1].endTime\n    }\n    const qns = mm.sequences.quantizeNoteSequence(unquantizedSequence, 4);\n    this.setState({ qSequence: qns, unqSequence: unquantizedSequence });\n  }\n\n  musicRNN() {\n    this.music_rnn.continueSequence(this.state.qSequence, 20, 1.5)\n      // .then((sample) => this.player.start(sample));\n      .then((sample) => {\n        this.update_sequence(mm.sequences.unquantizeSequence(sample).notes)\n      });\n    // const qns = mm.sequences.quantizeNoteSequence(ORIGINAL_TWINKLE_TWINKLE, 4);\n  }\n\n  render() {\n    const sm = 2;\n    const octave = this.state.octave;\n    let notes = [\n      'C', 'C#', 'D', 'D#', 'E', 'F',\n      'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n    const keymaps = [\n      'a', 'w', 's', 'e', 'd', 'f', 't',\n      'j', 'i', 'k', 'o', 'l'\n    ];\n    notes = notes.map(note => note + octave);\n\n    const notesAndKeys = notes.map((value, index) => {\n      return { note: value, keymap: keymaps[index] };\n    })\n\n    return (\n      <div>\n        <div className=\"pad\">\n          <Grid container spacing={24} justify=\"center\">\n            {notesAndKeys.map((value, index) => (\n              <Grid item sm={sm} key={index}>\n                <SynthButton\n                  note={value.note}\n                  keymap={value.keymap}\n                  returnNote={this.returnNote}\n                  evelope={this.envelope}\n                  oscillator={this.oscillator}\n                  recording={this.state.recording}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n\n        <div className=\"playback-buttons\">\n          <Grid container spacing={24} justify=\"center\">\n            <Grid item sm={2}>\n              <PlaybackButton isPlaying={this.isPlaying} playing={this.state.playing} />\n            </Grid>\n            <Grid item sm={2}>\n              <RecordButton isRecording={this.isRecording} />\n            </Grid>\n            <Grid item sm={2}>\n              {/* <button className=\"synth-button\" onClick={() => this.musicRNN()}>\n                <AddToQueue />\n              </button> */}\n              {/* <MLButton /> */}\n            </Grid>\n          </Grid>\n        </div>\n        <div className=\"canvas-container\">\n          <canvas id=\"canvas\" />\n        </div>\n        <div className=\"octave-container\">\n          <OctaveControl\n            returnOctave={this.returnOctave}\n            octave={this.state.octave} />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Pad;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Pad from './components/Pad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pad />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}