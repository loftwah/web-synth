{"version":3,"sources":["components/SynthButton.js","components/PlaybackButton.js","components/RecordButton.js","Magenta/CustomPlayer.tsx","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["SynthButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pressed","playSynth","bind","assertThisInitialized","stopSynth","checkMouseDown","touchMove","synth","Tone","envelope","toMaster","startTime","e","preventDefault","setState","triggerAttack","note","currentTime","toFixed","triggerRelease","timeLength","recording","returnNote","midi","toMidi","length","buttons","console","log","_this2","react_default","a","createElement","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","className","Component","PlaybackButton","isPlaying","play","playing","index_es","RecordButton","color","isRecording","record","require","CustomPlayer","_mm$BasePlayer","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","FMSynth","synths","Map","inherits","createClass","key","value","time","freq","Frequency","pitch","dur","endTime","triggerAttackRelease","instrument","program","mm","tone","Pad","sequence","qSequence","unqSequence","octave","player","quantizeNotes","bool","toggle","setupPlayer","viz","document","getElementById","noteHeight","pixelsPerTimeStep","noteSpacing","noteRGB","activeNoteRGB","run","redraw","stop","start","push","seconds","unquantizedSequence","notes","totalTime","qns","quantizeNoteSequence","_this3","music_rnn","initialize","continueSequence","then","sample","_this4","map","Grid_default","container","spacing","justify","index","item","sm","components_SynthButton","evelope","components_PlaybackButton","components_RecordButton","onClick","musicRNN","id","App","components_Pad","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ce2f3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport * as Tone from 'tone';\n//import * as mm from '@magenta/music';\n\n\nclass SynthButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n    };\n    this.playSynth = this.playSynth.bind(this);\n    this.stopSynth = this.stopSynth.bind(this);\n    this.checkMouseDown = this.checkMouseDown.bind(this);\n    this.touchMove = this.touchMove.bind(this);\n  }\n\n  componentWillMount() {\n    this.synth = new Tone.FMSynth({\n      envelope: this.props.envelope\n    }).toMaster();\n    // this.synth = new CustomPlayer();\n    this.startTime = null;\n    // console.log(Tone.Frequency('C4').toNote())\n    // console.log(Tone.Frequency('C4').toFrequency())\n    // console.log(Tone.Frequency('C4').toMidi())\n  }\n\n  playSynth(e) {\n    e.preventDefault();\n    // console.log('play note');\n    this.setState({ pressed: true });\n    this.synth.triggerAttack(this.props.note);\n    this.startTime = Tone.context.currentTime.toFixed(2)\n    // this.startTime = Tone.Transport.seconds.toFixed(2);\n  }\n\n  stopSynth(e) {\n    e.preventDefault();\n    this.setState({ pressed: false });\n    this.synth.triggerRelease();\n\n    let timeLength = (\n      Tone.context.currentTime.toFixed(2) - this.startTime\n    ).toFixed(2);\n    if (this.startTime !== null && this.props.recording) {\n      this.props.returnNote({\n        note: this.props.note,\n        midi: Tone.Frequency(this.props.note).toMidi(),\n        length: timeLength,\n        // startTime: this.startTime,\n        // endTime: Tone.context.currentTime.toFixed(2)\n        // endTime: Tone.Transport.seconds.toFixed(2)\n      });\n    }\n    this.startTime = null;\n  }\n\n  checkMouseDown(e) {\n    if (e.buttons === 1 || e.buttons === 3) {\n      this.playSynth(e);\n    } else {\n      this.stopSynth(e);\n    }\n  }\n\n  touchMove(e) {\n    console.log(e);\n    // console.log(this.props.pitch);\n    this.setState({ pressed: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={(e) => this.playSynth(e)}\n          onMouseUp={(e) => this.stopSynth(e)}\n          onTouchStart={(e) => this.playSynth(e)}\n          onTouchEnd={(e) => this.stopSynth(e)}\n          onMouseEnter={(e) => this.checkMouseDown(e)}\n          onMouseLeave={(e) => this.stopSynth(e)}\n          className={this.state.pressed ? \"synth-button pressed\" : \"synth-button\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SynthButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { PlayArrow } from '@material-ui/icons';\n\n\nclass PlaybackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  play() {\n    this.props.isPlaying();\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.play()}\n          className={this.props.playing ? \"synth-button pressed\" : \"synth-button\"}\n        >\n        <PlayArrow />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default PlaybackButton;","import React, { Component } from 'react';\n\n// import * as Tone from 'tone';\n// import * as mm from '@magenta/music';\n\nimport { FiberManualRecord } from '@material-ui/icons';\n\n\nclass RecordButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n      // recording: false,\n      color: \"error\",\n    };\n  }\n\n  record() {\n    const {pressed} = this.state;\n    this.props.isRecording(!pressed)\n    this.setState({\n      pressed: !pressed,\n      // recording: !this.state.recording\n    });\n\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button\n          onMouseDown={() => this.record()}\n          className={this.state.pressed ? \"synth-button pressed blink_text\" : \"synth-button\"}\n        >\n          <FiberManualRecord className=\"blink_texts\" color=\"error\" />\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default RecordButton;","import * as mm from '@magenta/music';\n// import * as Tone from 'tone';\nconst Tone = require('tone');\n\nexport class CustomPlayer extends mm.BasePlayer {\n  private synth = new Tone.FMSynth().toMaster();\n  private synths = new Map<number, any>();  // tslint:disable-line:no-any\n  /**\n   * The Tone module being used.\n   */\n  static readonly tone = Tone;  // tslint:disable-line:no-any\n\n  protected playNote(time: number, note: any) {\n    // If there's a velocity, use it.\n    // const velocity = undefined;\n    const freq = new Tone.Frequency(note.pitch, 'midi');\n    const dur = note.endTime - note.startTime;\n    // this.getSynth(note.instrument, note.program)\n    //   .triggerAttackRelease(freq, dur, time, velocity);\n    this.synth.triggerAttackRelease(freq, dur, time);\n  }\n\n  private getSynth(instrument: number, program?: number) {\n    // if (this.synths.has(instrument)) {\n    //   console.log(0)\n    //   return this.synths.get(instrument);\n    // } else if (program !== undefined && program >= 32 && program <= 39) {\n    //   // const bass = new Tone.Synth({oscillator: {type: 'triangle'}}).toMaster();\n    //   const bass = new Tone.FMSynth().toMaster();\n    //   // bass.volume.value = 5;\n    //   console.log(1)\n    //   this.synths.set(instrument, bass);\n    // } else {\n    //   console.log(2)\n    //   // this.synths.set(instrument, new Tone.PolySynth(10).toMaster());\n    //   this.synths.set(instrument, new Tone.FMSynth().toMaster());\n    // }\n    return this.synth;\n    // return this.synths.get(instrument);\n  }\n}\n\n\nexport default CustomPlayer;","import React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n// import Slider from '@material-ui/lab/Slider';\n\nimport * as Tone from 'tone';\nimport * as mm from '@magenta/music';\n\nimport SynthButton from './SynthButton';\n// import PlayButton from './PlayButton';\nimport PlaybackButton from './PlaybackButton';\nimport RecordButton from './RecordButton';\n\nimport CustomPlayer from '../Magenta/CustomPlayer';\n\nimport { AddToQueue } from '@material-ui/icons';\n\nclass Pad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: [],\n      qSequence: null,\n      unqSequence: null,\n      octave: 3,\n      recording: false,\n      playing: false,\n    };\n    // this.player = new mm.Player();\n    this.player = new CustomPlayer();\n\n    this.returnNote = this.returnNote.bind(this);\n    this.isRecording = this.isRecording.bind(this);\n    this.isPlaying = this.isPlaying.bind(this);\n    this.quantizeNotes = this.quantizeNotes.bind(this);\n    this.play = this.play.bind(this);\n  }\n\n  componentWillMount() {\n    this.player = new CustomPlayer();\n    // this.envelope = {\n    //   attack: 0.01,\n    //   decay: 0.1,\n    //   sustain: 0.5,\n    //   release: 1.0,\n    //   attackCurve: \"linear\",\n    //   decayCurve: \"exponential\",\n    //   releaseCurve: \"exponential\"\n    // };\n    this.envelope = {};\n    // this.synth = new Tone.FMSynth({\n    //   envelope: this.envelope\n    // }).toMaster();\n\n  }\n\n  async isRecording(bool) {\n    this.setState({ recording: bool });\n    Tone.Transport.toggle()\n    if (!bool) {\n      await this.quantizeNotes();\n      this.setupPlayer();\n    }\n  }\n\n  setupPlayer() {\n    const config = {\n      noteHeight: 6,\n      pixelsPerTimeStep: 30,  // like a note width\n      noteSpacing: 1,\n      noteRGB: '245, 245, 245',\n      activeNoteRGB: '240, 84, 119',\n    }\n    this.viz = new mm.Visualizer(\n      // this.state.unqSequence,\n      this.state.unqSequence,\n      document.getElementById('canvas'),\n      config);\n\n    // this.player = new mm.Player(false, {\n    //   run: (note) => this.viz.redraw(note),\n    //   stop: () => {this.setState({ playing: false });}\n    // });\n    this.player = new CustomPlayer(false, {\n      run: (note) => this.viz.redraw(note),\n      stop: () => { this.setState({ playing: false }); }\n    });\n  }\n\n  isPlaying() {\n    if (this.state.unqSequence) {\n      this.setState({ playing: !this.state.playing });\n      this.play();\n    }\n  }\n\n  play() {\n    if (this.player.isPlaying()) {\n      this.player.stop();\n      this.setState({ playing: false });\n    } else {\n      this.player.start(this.state.unqSequence);\n      // this.player.start(this.state.unqSequence)\n      //   .then(() => this.setState({ playing: false }));\n    }\n  }\n\n  returnNote(note) {\n    // console.log(time.beg);\n    // console.log(time.end);\n    let sequence = this.state.sequence;\n    console.log(note);\n    sequence.push({\n      pitch: note.midi,\n      startTime: (Tone.Transport.seconds.toFixed(2) - note.length).toFixed(2),\n      endTime: Tone.Transport.seconds.toFixed(2)\n    })\n    this.setState({ sequence: sequence });\n  }\n\n  async quantizeNotes() {\n    let { sequence } = this.state;\n    const unquantizedSequence = {\n      notes: sequence,\n      totalTime: sequence[sequence.length - 1].endTime\n    }\n    const qns = mm.sequences.quantizeNoteSequence(unquantizedSequence, 4);\n    this.setState({ qSequence: qns, unqSequence: unquantizedSequence });\n  }\n\n  musicRNN() {\n    const music_rnn = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn');\n    music_rnn.initialize();\n    music_rnn.continueSequence(this.state.qSequence, 20, 1.5)\n      .then((sample) => this.player.start(sample));\n    // const qns = mm.sequences.quantizeNoteSequence(ORIGINAL_TWINKLE_TWINKLE, 4);\n\n  }\n\n  render() {\n    const sm = 2;\n    const octave = this.state.octave;\n    let notes = [\n      'C', 'C#', 'D', 'D#', 'E', 'F',\n      'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n    notes = notes.map(note => note + octave);\n\n    return (\n      <div>\n        <div className=\"pad\">\n          <Grid container spacing={24} justify=\"center\">\n            {notes.map((value, index) => (\n              <Grid item sm={sm} key={index}>\n                <SynthButton\n                  note={value}\n                  returnNote={this.returnNote}\n                  evelope={this.envelope}\n                  recording={this.state.recording}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n\n        <div className=\"playback-buttons\">\n          <Grid container spacing={24} justify=\"center\">\n            <Grid item sm={2}>\n              <PlaybackButton isPlaying={this.isPlaying} playing={this.state.playing} />\n            </Grid>\n            <Grid item sm={2}>\n              <RecordButton isRecording={this.isRecording} />\n            </Grid>\n            <Grid item sm={2}>\n              <button className=\"synth-button\" onClick={() => this.musicRNN()}>\n              <AddToQueue />\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n        <div className=\"canvas-container\">\n          <canvas id=\"canvas\" />\n        </div>\n\n\n      </div>\n    )\n  }\n}\n\nexport default Pad;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Pad from './components/Pad';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pad />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}